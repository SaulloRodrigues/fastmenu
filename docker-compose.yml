services:
  postgres:
    image: postgres:latest
    platform: linux/amd64
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - ./backend:/app
    environment:
      APP_PORT: ${APP_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
    command: go run main.go

  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    working_dir: /app
    depends_on:
      - backend
    command: yarn dev

volumes:
  pgdata: